name: Java CI with Maven

on: [push, pull_request]

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Unit Test with Maven
      run: mvn -B clean test --file pom.xml

  sonarcloud:
    runs-on: ubuntu-latest
    needs: test
    name: scan
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  registry:
    runs-on: ubuntu-latest
    needs: [test,sonarcloud]
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_EMAIL}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASS}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag imedznd/clean-car:$(date +%s)

      - name: Docker Push
        run: docker push imedznd/clean-car

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to Heroku
        id: heroku
        uses: snithyanantham/docker-compose-multiple-apps-heroku-deploy@v1.0
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          api_key: ${{ secrets.HEROKU_API_KEY }}
          docker_compose_file: 'docker-compose.heroku.yml'
          heroku_apps: '[{"imagename":"rabbitmq:3-management","appname":"rabbitmq","apptype":"worker"},{"imagename":"imedznd/clean-car","appname":"car-service-app","apptype":"web"}]'
